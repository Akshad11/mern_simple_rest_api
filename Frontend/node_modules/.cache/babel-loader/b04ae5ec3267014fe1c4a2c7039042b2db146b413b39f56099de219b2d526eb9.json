{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\vs code\\\\React\\\\my-app\\\\src\\\\YouTubeSubscriberCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YouTubeStats(_ref) {\n  _s();\n  let {\n    channelId\n  } = _ref;\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [likeCount, setLikeCount] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const apiKey = 'YOUR_API_KEY_HERE';\n      const channelUrl = `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`;\n      const videoUrl = `https://www.googleapis.com/youtube/v3/videos?part=statistics&id=YOUR_VIDEO_ID_HERE&key=${apiKey}`;\n      const [channelResponse, videoResponse] = await Promise.all([fetch(channelUrl), fetch(videoUrl)]);\n      const channelData = await channelResponse.json();\n      const videoData = await videoResponse.json();\n      const {\n        subscriberCount,\n        viewCount,\n        videoCount,\n        commentCount\n      } = channelData.items[0].statistics;\n      const {\n        likeCount\n      } = videoData.items[0].statistics;\n      setSubscriberCount(parseInt(subscriberCount));\n      setViewCount(parseInt(viewCount));\n      setLikeCount(parseInt(likeCount));\n    }\n    fetchData();\n  }, [channelId]);\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newChannelId = event.target.elements.channelId.value;\n    setSubscriberCount(null);\n    setViewCount(null);\n    setLikeCount(null);\n    channelId = newChannelId;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter a YouTube channel ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"channelId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), subscriberCount === null || viewCount === null || likeCount === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [subscriberCount, \" subscribers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [viewCount, \" views\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [likeCount, \" likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(YouTubeStats, \"9iHI19Y/Yiw5qbtBPCTnNRdD4JY=\");\n_c = YouTubeStats;\nexport default YouTubeStats;\nvar _c;\n$RefreshReg$(_c, \"YouTubeStats\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YouTubeStats","_ref","_s","channelId","subscriberCount","setSubscriberCount","viewCount","setViewCount","likeCount","setLikeCount","fetchData","apiKey","channelUrl","videoUrl","channelResponse","videoResponse","Promise","all","fetch","channelData","json","videoData","videoCount","commentCount","items","statistics","parseInt","handleFormSubmit","event","preventDefault","newChannelId","target","elements","value","children","onSubmit","type","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/vs code/React/my-app/src/YouTubeSubscriberCount.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction YouTubeStats({ channelId }) {\r\n    const [subscriberCount, setSubscriberCount] = useState(null);\r\n    const [viewCount, setViewCount] = useState(null);\r\n    const [likeCount, setLikeCount] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const apiKey = 'YOUR_API_KEY_HERE';\r\n            const channelUrl = `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`;\r\n            const videoUrl = `https://www.googleapis.com/youtube/v3/videos?part=statistics&id=YOUR_VIDEO_ID_HERE&key=${apiKey}`;\r\n            const [channelResponse, videoResponse] = await Promise.all([\r\n                fetch(channelUrl),\r\n                fetch(videoUrl)\r\n            ]);\r\n            const channelData = await channelResponse.json();\r\n            const videoData = await videoResponse.json();\r\n            const {\r\n                subscriberCount,\r\n                viewCount,\r\n                videoCount,\r\n                commentCount\r\n            } = channelData.items[0].statistics;\r\n            const { likeCount } = videoData.items[0].statistics;\r\n            setSubscriberCount(parseInt(subscriberCount));\r\n            setViewCount(parseInt(viewCount));\r\n            setLikeCount(parseInt(likeCount));\r\n        }\r\n\r\n        fetchData();\r\n    }, [channelId]);\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const newChannelId = event.target.elements.channelId.value;\r\n        setSubscriberCount(null);\r\n        setViewCount(null);\r\n        setLikeCount(null);\r\n        channelId = newChannelId;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <label>\r\n                    Enter a YouTube channel ID:\r\n                    <input type=\"text\" name=\"channelId\" />\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {subscriberCount === null || viewCount === null || likeCount === null ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div>\r\n                    <p>{subscriberCount} subscribers</p>\r\n                    <p>{viewCount} views</p>\r\n                    <p>{likeCount} likes</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YouTubeStats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}