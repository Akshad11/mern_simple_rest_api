{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\vs code\\\\React\\\\my-app\\\\src\\\\ChannelSubscriberCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChannelSubscriberCount() {\n  _s();\n  const [channelLink, setChannelLink] = useState('');\n  const [channelId, setChannelId] = useState('');\n  const [subscriberCount, setSubscriberCount] = useState('');\n  const extractChannelId = () => {\n    const regex = /(channel|user)\\/([a-zA-Z0-9_-]+)/;\n    const match = channelLink.match(regex);\n    if (match && match.length > 2) {\n      setChannelId(match[2]);\n      return true;\n    }\n    return false;\n  };\n  const fetchSubscriberCount = () => {\n    const apiKey = 'YOUR_API_KEY';\n    if (extractChannelId()) {\n      fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`).then(response => response.json()).then(data => {\n        setSubscriberCount(data.items[0].statistics.subscriberCount);\n      }).catch(error => console.error(error));\n    } else {\n      console.error('Invalid YouTube channel link');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channelLink\",\n        children: \"Enter YouTube Channel Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channelLink\",\n        value: channelLink,\n        onChange: e => setChannelLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSubscriberCount,\n      children: \"Get Subscriber Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), subscriberCount && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [subscriberCount, \" subscribers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(ChannelSubscriberCount, \"joWqbASk+SK1FFv5x3UhU/IPj/o=\");\n_c = ChannelSubscriberCount;\nexport default ChannelSubscriberCount;\nvar _c;\n$RefreshReg$(_c, \"ChannelSubscriberCount\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChannelSubscriberCount","_s","channelLink","setChannelLink","channelId","setChannelId","subscriberCount","setSubscriberCount","extractChannelId","regex","match","length","fetchSubscriberCount","apiKey","fetch","then","response","json","data","items","statistics","catch","error","console","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/vs code/React/my-app/src/ChannelSubscriberCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChannelSubscriberCount() {\r\n    const [channelLink, setChannelLink] = useState('');\r\n    const [channelId, setChannelId] = useState('');\r\n    const [subscriberCount, setSubscriberCount] = useState('');\r\n\r\n    const extractChannelId = () => {\r\n        const regex = /(channel|user)\\/([a-zA-Z0-9_-]+)/;\r\n        const match = channelLink.match(regex);\r\n        if (match && match.length > 2) {\r\n            setChannelId(match[2]);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const fetchSubscriberCount = () => {\r\n        const apiKey = 'YOUR_API_KEY';\r\n\r\n        if (extractChannelId()) {\r\n            fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setSubscriberCount(data.items[0].statistics.subscriberCount);\r\n                })\r\n                .catch(error => console.error(error));\r\n        } else {\r\n            console.error('Invalid YouTube channel link');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label htmlFor=\"channelLink\">Enter YouTube Channel Link:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"channelLink\"\r\n                    value={channelLink}\r\n                    onChange={e => setChannelLink(e.target.value)}\r\n                />\r\n            </div>\r\n            <button onClick={fetchSubscriberCount}>Get Subscriber Count</button>\r\n            {subscriberCount &&\r\n                <h2>{subscriberCount} subscribers</h2>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelSubscriberCount;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAG,kCAAkC;IAChD,MAAMC,KAAK,GAAGR,WAAW,CAACQ,KAAK,CAACD,KAAK,CAAC;IACtC,IAAIC,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3BN,YAAY,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;MACtB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,MAAM,GAAG,cAAc;IAE7B,IAAIL,gBAAgB,EAAE,EAAE;MACpBM,KAAK,CAAE,qEAAoEV,SAAU,QAAOS,MAAO,EAAC,CAAC,CAChGE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVX,kBAAkB,CAACW,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU,CAACd,eAAe,CAAC;MAChE,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAC7C,CAAC,MAAM;MACHC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAO0B,OAAO,EAAC,aAAa;QAAAD,QAAA,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChE9B,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,aAAa;QAChBC,KAAK,EAAE9B,WAAY;QACnB+B,QAAQ,EAAEC,CAAC,IAAI/B,cAAc,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACN9B,OAAA;MAAQqC,OAAO,EAAExB,oBAAqB;MAAAY,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACnEvB,eAAe,iBACZP,OAAA;MAAAyB,QAAA,GAAKlB,eAAe,EAAC,cAAY;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAExC;AAEd;AAAC5B,EAAA,CA/CQD,sBAAsB;AAAAqC,EAAA,GAAtBrC,sBAAsB;AAiD/B,eAAeA,sBAAsB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}