{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\vs code\\\\React\\\\my-app\\\\src\\\\ChannelSubscriberCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChannelSubscriberCount() {\n  _s();\n  const [channel1Id, setChannel1Id] = useState('');\n  const [channel2Id, setChannel2Id] = useState('');\n  const [channel1Count, setChannel1Count] = useState('');\n  const [channel2Count, setChannel2Count] = useState('');\n  const fetchSubscriberCounts = () => {\n    const apiKey = 'YOUR_API_KEY';\n    fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channel1Id},${channel2Id}&key=${apiKey}`).then(response => response.json()).then(data => {\n      setChannel1Count(data.items[0].statistics.subscriberCount);\n      setChannel2Count(data.items[1].statistics.subscriberCount);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel1Id\",\n        children: \"Enter Channel 1 ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel1Id\",\n        value: channel1Id,\n        onChange: e => setChannel1Id(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel2Id\",\n        children: \"Enter Channel 2 ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel2Id\",\n        value: channel2Id,\n        onChange: e => setChannel2Id(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSubscriberCounts,\n      children: \"Get Subscriber Counts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), channel1Count && channel2Count && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Channel 1: \", channel1Count, \" subscribers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Channel 2: \", channel2Count, \" subscribers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(ChannelSubscriberCount, \"QULNm4oN1RQKCkfsYlHqbIV5Brg=\");\n_c = ChannelSubscriberCount;\nexport default ChannelSubscriberCount;\nvar _c;\n$RefreshReg$(_c, \"ChannelSubscriberCount\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChannelSubscriberCount","_s","channel1Id","setChannel1Id","channel2Id","setChannel2Id","channel1Count","setChannel1Count","channel2Count","setChannel2Count","fetchSubscriberCounts","apiKey","fetch","then","response","json","data","items","statistics","subscriberCount","catch","error","console","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/vs code/React/my-app/src/ChannelSubscriberCount.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChannelSubscriberCount() {\r\n    const [channel1Id, setChannel1Id] = useState('');\r\n    const [channel2Id, setChannel2Id] = useState('');\r\n    const [channel1Count, setChannel1Count] = useState('');\r\n    const [channel2Count, setChannel2Count] = useState('');\r\n\r\n    const fetchSubscriberCounts = () => {\r\n        const apiKey = 'YOUR_API_KEY';\r\n\r\n        fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channel1Id},${channel2Id}&key=${apiKey}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setChannel1Count(data.items[0].statistics.subscriberCount);\r\n                setChannel2Count(data.items[1].statistics.subscriberCount);\r\n            })\r\n            .catch(error => console.error(error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label htmlFor=\"channel1Id\">Enter Channel 1 ID:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"channel1Id\"\r\n                    value={channel1Id}\r\n                    onChange={e => setChannel1Id(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"channel2Id\">Enter Channel 2 ID:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"channel2Id\"\r\n                    value={channel2Id}\r\n                    onChange={e => setChannel2Id(e.target.value)}\r\n                />\r\n            </div>\r\n            <button onClick={fetchSubscriberCounts}>Get Subscriber Counts</button>\r\n            {channel1Count && channel2Count &&\r\n                <div>\r\n                    <h2>Channel 1: {channel1Count} subscribers</h2>\r\n                    <h2>Channel 2: {channel2Count} subscribers</h2>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelSubscriberCount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}