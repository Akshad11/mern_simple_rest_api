{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\vs code\\\\React\\\\my-app\\\\src\\\\YouTubeChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YouTubeChannel() {\n  _s();\n  const [channelId, setChannelId] = useState('');\n  const [subscriberCount, setSubscriberCount] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=YOUR_API_KEY`);\n      const data = await response.json();\n      setSubscriberCount(data.items[0].statistics.subscriberCount);\n    };\n    fetchData();\n  }, [channelId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=YOUR_API_KEY`);\n    const data = await response.json();\n    setSubscriberCount(data.items[0].statistics.subscriberCount);\n  };\n  const handleTaskVerification = () => {\n    alert('Task verified!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Channel Subscriber Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter YouTube Channel ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: channelId,\n          onChange: e => setChannelId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Subscriber Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: subscriberCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskVerification,\n      children: \"Verify Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(YouTubeChannel, \"LFY+t2OHci0rnIEulUJhZP5EaO4=\");\n_c = YouTubeChannel;\nexport default YouTubeChannel;\nvar _c;\n$RefreshReg$(_c, \"YouTubeChannel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YouTubeChannel","_s","channelId","setChannelId","subscriberCount","setSubscriberCount","fetchData","response","fetch","data","json","items","statistics","handleSubmit","event","preventDefault","handleTaskVerification","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/vs code/React/my-app/src/YouTubeChannel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction YouTubeChannel() {\r\n    const [channelId, setChannelId] = useState('');\r\n    const [subscriberCount, setSubscriberCount] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(\r\n                `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=YOUR_API_KEY`\r\n            );\r\n            const data = await response.json();\r\n            setSubscriberCount(data.items[0].statistics.subscriberCount);\r\n        };\r\n        fetchData();\r\n    }, [channelId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const response = await fetch(\r\n            `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=YOUR_API_KEY`\r\n        );\r\n        const data = await response.json();\r\n        setSubscriberCount(data.items[0].statistics.subscriberCount);\r\n    };\r\n\r\n    const handleTaskVerification = () => {\r\n        alert('Task verified!');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>YouTube Channel Subscriber Count</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Enter YouTube Channel ID:\r\n                    <input type=\"text\" value={channelId} onChange={(e) => setChannelId(e.target.value)} />\r\n                </label>\r\n                <button type=\"submit\">Get Subscriber Count</button>\r\n            </form>\r\n            <p>{subscriberCount}</p>\r\n            <button onClick={handleTaskVerification}>Verify Task</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YouTubeChannel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,qEAAoEN,SAAU,mBAAkB,CACpG;MACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,kBAAkB,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU,CAACR,eAAe,CAAC;IAChE,CAAC;IACDE,SAAS,EAAE;EACf,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CACvB,qEAAoEN,SAAU,mBAAkB,CACpG;IACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,kBAAkB,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU,CAACR,eAAe,CAAC;EAChE,CAAC;EAED,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;IACjCC,KAAK,CAAC,gBAAgB,CAAC;EAC3B,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzCvB,OAAA;MAAMwB,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBACzBnB,OAAA;QAAAmB,QAAA,GAAO,2BAEH,eAAAnB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,SAAU;UAACwB,QAAQ,EAAGC,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClF,eACRvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD,eACPvB,OAAA;MAAAmB,QAAA,EAAId;IAAe;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBvB,OAAA;MAAQ8B,OAAO,EAAEb,sBAAuB;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEd;AAACrB,EAAA,CA1CQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA4CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}